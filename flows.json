[
    {
        "id": "6c71644f.90490c",
        "type": "tab",
        "label": "motion notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8e4e09de.5dedc8",
        "type": "tab",
        "label": "skyaware",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1fb2958d.14f89a",
        "type": "server",
        "name": "Home Assistant",
        "version": 1,
        "legacy": false,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    },
    {
        "id": "4c58280.c1ed4d8",
        "type": "amazon config",
        "name": "AWS-withConfig",
        "region": "us-east-1",
        "proxyRequired": false,
        "proxy": ""
    },
    {
        "id": "4ec90f43.a67098",
        "type": "influxdb",
        "hostname": "192.168.42.11",
        "port": "8086",
        "protocol": "http",
        "database": "skyaware",
        "name": "quongo",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "7a6f1441.9bac74",
        "type": "server-state-changed",
        "z": "6c71644f.90490c",
        "name": "motion detected: front door",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_front_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 140,
        "wires": [
            [
                "3b92f41c.15286c"
            ],
            []
        ]
    },
    {
        "id": "5662f68e.29e62",
        "type": "api-call-service",
        "z": "6c71644f.90490c",
        "d": true,
        "name": "in-hass notification",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "persistent_notification",
        "entityId": "",
        "data": "{\t   \"message\": $substringAfter(topic, \"binary_sensor.motion_\") & \" \" & data.new_state.attributes.event_object,\t   \"title\": data.new_state.attributes.friendly_name\t}",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "8cfc62ab.42de7",
        "type": "inject",
        "z": "6c71644f.90490c",
        "name": "motion",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "data",
                "v": "{\"entity_id\":\"binary_sensor.motion_front_door\",\"old_state\":{\"entity_id\":\"binary_sensor.motion_front_door\",\"state\":\"on\",\"attributes\":{\"attribution\":\"Powered by Unifi Protect Server\",\"device_model\":\"UVC G4 Doorbell\",\"last_tripped_time\":\"2021-06-24 13:33:51\",\"event_score\":60,\"event_length\":0,\"event_object\":\"vehicle\",\"friendly_name\":\"Motion Front door\",\"device_class\":\"motion\"},\"last_changed\":\"2021-06-24T17:33:58.129315+00:00\",\"last_updated\":\"2021-06-24T17:33:58.129315+00:00\",\"context\":{\"id\":\"8c58f79713391379f139419d9fa4bad5\",\"parent_id\":null,\"user_id\":null},\"original_state\":\"on\"},\"new_state\":{\"entity_id\":\"binary_sensor.motion_front_door\",\"state\":\"off\",\"attributes\":{\"attribution\":\"Powered by Unifi Protect Server\",\"device_model\":\"UVC G4 Doorbell\",\"last_tripped_time\":\"2021-06-24 13:33:51\",\"event_score\":60,\"event_length\":12.37,\"event_object\":\"not_a_vehicle\",\"friendly_name\":\"Motion Front door\",\"device_class\":\"motion\"},\"last_changed\":\"2021-06-24T17:34:02.640208+00:00\",\"last_updated\":\"2021-06-24T17:34:02.640208+00:00\",\"context\":{\"id\":\"a88da8f739fd65279ead3ec5d29d39c4\",\"parent_id\":null,\"user_id\":null},\"original_state\":\"off\",\"timeSinceChangedMs\":5}}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "binary_sensor.motion_front_door",
        "payload": "off",
        "payloadType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "3b92f41c.15286c"
            ]
        ]
    },
    {
        "id": "5c1a8d29.db4a24",
        "type": "change",
        "z": "6c71644f.90490c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera_entity_id",
                "pt": "msg",
                "to": "\"camera.\" & $substringAfter(topic, \"binary_sensor.motion_\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"motion_snapshot_\" \t    & $now(\"[Y0001]-[M01]-[D01]T[H01]_[m01]_[s01]Z\") \t    & \"_\"\t    & $split(msg.camera_entity_id, \".\")[1]\t    & \".jpg\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "is_critical",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "message",
                "pt": "msg",
                "to": "$substringAfter(topic, \"binary_sensor.motion_\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 180,
        "wires": [
            [
                "5662f68e.29e62",
                "3296c10a.9b412e"
            ]
        ]
    },
    {
        "id": "22b532a0.3b8d26",
        "type": "api-call-service",
        "z": "6c71644f.90490c",
        "name": "notify my iPhone",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "mobile_app_camilla_12_0",
        "entityId": "",
        "data": "{\t   \"title\": data.new_state.attributes.friendly_name,\t   \"message\": message,\t   \"data\": {\t       \"subtitle\": data.new_state.attributes.event_object,\t       \"push\": {\t           \"thread-id\": \"home-motion-\" & topic,\t           \"sound\": {\t                \"name\": \"default\",\t                \"critical\": is_critical,\t                \"volume\": 1\t           }\t       },\t       \"image\": \"https://s3.amazonaws.com/\" & Bucket & \"/\" &\t       Key\t    }\t}\t",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3296c10a.9b412e",
        "type": "ha-api",
        "z": "6c71644f.90490c",
        "name": "get camera entity",
        "server": "1fb2958d.14f89a",
        "version": 1,
        "debugenabled": false,
        "protocol": "http",
        "method": "get",
        "path": "camera_proxy/{{{ camera_entity_id }}}",
        "data": "{}",
        "dataType": "jsonata",
        "responseType": "arraybuffer",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "results"
            }
        ],
        "x": 990,
        "y": 220,
        "wires": [
            [
                "cdcd22b2.55961",
                "17801fb8.a006b8",
                "a1c6a8a6.870ca"
            ]
        ]
    },
    {
        "id": "3b92f41c.15286c",
        "type": "switch",
        "z": "6c71644f.90490c",
        "name": "is not a vehicle?",
        "property": "data.new_state.attributes.event_object",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "vehicle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "9807f009.32ba08"
            ]
        ]
    },
    {
        "id": "e4a86753.94dcf8",
        "type": "AWS S3",
        "z": "6c71644f.90490c",
        "aws": "4c58280.c1ed4d8",
        "operation": "PutObject",
        "Bucket": "",
        "Key": "",
        "UploadId": "",
        "CopySource": "",
        "Id": "",
        "Delete": "",
        "AccelerateConfiguration": "",
        "AnalyticsConfiguration": "",
        "CORSConfiguration": "",
        "ServerSideEncryptionConfiguration": "",
        "IntelligentTieringConfiguration": "",
        "InventoryConfiguration": "",
        "BucketLoggingStatus": "",
        "MetricsConfiguration": "",
        "NotificationConfiguration": "",
        "OwnershipControls": "",
        "Policy": "",
        "ReplicationConfiguration": "",
        "RequestPaymentConfiguration": "",
        "Tagging": "",
        "VersioningConfiguration": "",
        "WebsiteConfiguration": "",
        "PublicAccessBlockConfiguration": "",
        "Expression": "",
        "ExpressionType": "",
        "InputSerialization": "",
        "OutputSerialization": "",
        "PartNumber": "",
        "name": "upload to s3",
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "22b532a0.3b8d26"
            ],
            [
                "9544fb61.5ab438",
                "42154f6c.cdcad8"
            ]
        ],
        "icon": "font-awesome/fa-cloud-upload"
    },
    {
        "id": "cdcd22b2.55961",
        "type": "function",
        "z": "6c71644f.90490c",
        "name": "build PutObject",
        "func": "msg.Body = msg.payload;\nmsg.Bucket = flow.get(\"s3\").bucket;\nmsg.Key = flow.get(\"s3\").prefix + msg.filename;\n\n// node.warn(msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 240,
        "wires": [
            [
                "e4a86753.94dcf8"
            ]
        ]
    },
    {
        "id": "9544fb61.5ab438",
        "type": "debug",
        "z": "6c71644f.90490c",
        "name": "err",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 240,
        "wires": []
    },
    {
        "id": "42154f6c.cdcad8",
        "type": "api-call-service",
        "z": "6c71644f.90490c",
        "name": "show error",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "debugenabled": true,
        "service_domain": "notify",
        "service": "persistent_notification",
        "entityId": "",
        "data": "{\"title\": err.code, \"message\": err.message}",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1690,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "7d3b2b3.38c9854",
        "type": "server-state-changed",
        "z": "6c71644f.90490c",
        "name": "motion detected: garage/alley",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_garage_alley",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 200,
        "wires": [
            [
                "b91cfe5b.ab617"
            ],
            []
        ]
    },
    {
        "id": "ef42fb76.2941f",
        "type": "server-state-changed",
        "z": "6c71644f.90490c",
        "name": "motion detected: parking pad",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_parking_pad",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 260,
        "wires": [
            [
                "1d1cc78.7d0e139"
            ],
            []
        ]
    },
    {
        "id": "9807f009.32ba08",
        "type": "trigger",
        "z": "6c71644f.90490c",
        "name": "once/5m",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "5c1a8d29.db4a24"
            ]
        ]
    },
    {
        "id": "b91cfe5b.ab617",
        "type": "trigger",
        "z": "6c71644f.90490c",
        "name": "once/5m",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "5c1a8d29.db4a24"
            ]
        ]
    },
    {
        "id": "1d1cc78.7d0e139",
        "type": "trigger",
        "z": "6c71644f.90490c",
        "name": "once/5m",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "5c1a8d29.db4a24"
            ]
        ]
    },
    {
        "id": "7b41b747.6cb21",
        "type": "http request",
        "z": "8e4e09de.5dedc8",
        "name": "skyaware978",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.42.58/skyaware978/data/aircraft.json",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "26ea157d.c6467a"
            ]
        ]
    },
    {
        "id": "ffb0c10.246174",
        "type": "http request",
        "z": "8e4e09de.5dedc8",
        "name": "dump1090",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.42.58/dump1090/data/aircraft.json",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "59639fc1.9c4b48"
            ]
        ]
    },
    {
        "id": "afd05963.8a9948",
        "type": "inject",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "7b41b747.6cb21",
                "ffb0c10.246174"
            ]
        ]
    },
    {
        "id": "acf0ce6e.b3793",
        "type": "ha-entity",
        "z": "8e4e09de.5dedc8",
        "name": "aircraft_978",
        "server": "1fb2958d.14f89a",
        "version": 1,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "aircraft_978"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": "mdi:airplane"
            },
            {
                "property": "unit_of_measurement",
                "value": "count"
            }
        ],
        "state": "$count(payload.aircraft)",
        "stateType": "jsonata",
        "attributes": [
            {
                "property": "now",
                "value": "payload.now",
                "valueType": "msg"
            },
            {
                "property": "messages",
                "value": "payload.messages",
                "valueType": "msg"
            }
        ],
        "resend": true,
        "outputLocation": "",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "$entity().state ? \"on\": \"off\"",
        "outputPayloadType": "jsonata",
        "x": 490,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "deae8479.c40408",
        "type": "ha-entity",
        "z": "8e4e09de.5dedc8",
        "name": "aircraft_1090",
        "server": "1fb2958d.14f89a",
        "version": 1,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "aircraft_1090"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": "mdi:airplane"
            },
            {
                "property": "unit_of_measurement",
                "value": "count"
            }
        ],
        "state": "$count(payload.aircraft)",
        "stateType": "jsonata",
        "attributes": [
            {
                "property": "now",
                "value": "payload.now",
                "valueType": "msg"
            },
            {
                "property": "messages",
                "value": "payload.messages",
                "valueType": "msg"
            }
        ],
        "resend": true,
        "outputLocation": "",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "$entity().state ? \"on\": \"off\"",
        "outputPayloadType": "jsonata",
        "x": 490,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5394059f.b5361c",
        "type": "function",
        "z": "8e4e09de.5dedc8",
        "name": "Split array into individual planes",
        "func": "var m = [];\nfor (var i in msg.payload.aircraft) {\n    m.push({\n        payload: msg.payload.aircraft[i],\n        timestamp: msg.timestamp,\n        source: msg.source,\n    });\n}\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 120,
        "wires": [
            [
                "5e7a4a2b.fa27e4",
                "d8476fc2.2f007"
            ]
        ]
    },
    {
        "id": "2ae90fc7.b57198",
        "type": "change",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.hex & \" \" & payload.flight",
                "tot": "jsonata"
            },
            {
                "t": "move",
                "p": "payload.track",
                "pt": "msg",
                "to": "payload.heading",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.bearing",
                "pt": "msg",
                "to": "payload.heading",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.icon",
                "pt": "msg",
                "to": "plane",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "ADSB",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.flight & \" \" & payload.alt",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.speed",
                "pt": "msg",
                "to": "payload.gs",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "9694aa93.4bf0c8",
                "4c0fd75f.339948",
                "d8ba4108.07e18",
                "a322656d.2b5a88",
                "bb59003c.d7ac68"
            ]
        ]
    },
    {
        "id": "a322656d.2b5a88",
        "type": "worldmap",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "lat": "37.5731",
        "lon": "-77.4899",
        "zoom": "",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "90",
        "panit": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "path": "",
        "x": 1550,
        "y": 260,
        "wires": []
    },
    {
        "id": "5e7a4a2b.fa27e4",
        "type": "debug",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 80,
        "wires": []
    },
    {
        "id": "9694aa93.4bf0c8",
        "type": "debug",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 280,
        "wires": []
    },
    {
        "id": "d8476fc2.2f007",
        "type": "switch",
        "z": "8e4e09de.5dedc8",
        "name": "has position",
        "property": "payload.lat and payload.lon",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 160,
        "wires": [
            [
                "2ae90fc7.b57198"
            ]
        ]
    },
    {
        "id": "fa5e2384.699c2",
        "type": "influxdb out",
        "z": "8e4e09de.5dedc8",
        "influxdb": "4ec90f43.a67098",
        "name": "",
        "measurement": "aircraft",
        "precision": "ms",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1480,
        "y": 340,
        "wires": []
    },
    {
        "id": "4c0fd75f.339948",
        "type": "function",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "func": "/*\nIf msg.payload is an array containing two objects,\nthe first object will be written as the set of named fields,\nthe second is the set of named tags.\n*/\np = msg.payload;\n\nfields = {\n    lat: p.lat,\n    lon: p.lon,\n    rssi: p.rssi,\n    time: Math.round((msg.timestamp - p.seen_pos) * 1000), // ugh\n};\n\nif (p.alt_baro) {\n    fields.alt_baro = p.alt_baro;\n}\n    \nif (p.alt_geom) {\n    fields.alt_geom = p.alt_geom;\n}\n\nif (p.gs) {\n    fields.gs = p.gs;\n}\n\n\ntags = {\n    hex: p.hex,\n    source: msg.source,\n};\n\nif (p.squawk) {\n    tags.squawk = p.squawk;\n}\n\nif (p.emergency) {\n    tags.emergency = p.emergency;\n}\n\nif (p.flight) {\n    tags.flight = p.flight;\n}\n\nif (p.category) {\n    tags.category = p.category;\n}\n\nmsg = {\n    payload: [\n        // fields\n        fields,\n    \n        // tags\n        tags,\n]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 340,
        "wires": [
            [
                "fa5e2384.699c2"
            ]
        ]
    },
    {
        "id": "26ea157d.c6467a",
        "type": "change",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "skyaware978",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "payload.now",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 100,
        "wires": [
            [
                "acf0ce6e.b3793",
                "ae0edcc6.900b6"
            ]
        ]
    },
    {
        "id": "59639fc1.9c4b48",
        "type": "change",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "dump1090",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "payload.now",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 140,
        "wires": [
            [
                "deae8479.c40408",
                "ae0edcc6.900b6"
            ]
        ]
    },
    {
        "id": "e3fd6b99.b748f8",
        "type": "debug",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "c2140346.9061e8",
        "type": "server-events",
        "z": "6c71644f.90490c",
        "name": "doorbell rang",
        "server": "1fb2958d.14f89a",
        "version": 1,
        "event_type": "unifiprotect_doorbell",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 90,
        "y": 380,
        "wires": [
            [
                "117ffffa.58b3a8"
            ]
        ]
    },
    {
        "id": "f8f5cb6c.5798a8",
        "type": "inject",
        "z": "6c71644f.90490c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unifiprotect_doorbell",
        "payload": "{\"event_type\":\"unifiprotect_doorbell\",\"entity_id\":\"binary_sensor.doorbell_front_door\",\"event\":{\"ring\":true,\"entity_id\":\"binary_sensor.doorbell_front_door\"},\"origin\":\"LOCAL\",\"time_fired\":\"2021-06-29T13:53:14.017139+00:00\",\"context\":{\"id\":\"69931d2e480598c20d9366043e51c273\",\"parent_id\":null,\"user_id\":null}}",
        "payloadType": "json",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "117ffffa.58b3a8"
            ]
        ]
    },
    {
        "id": "f5de0832.ca3af",
        "type": "change",
        "z": "6c71644f.90490c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera_entity_id",
                "pt": "msg",
                "to": "\"camera.\" & $substringAfter(payload.entity_id, \"binary_sensor.doorbell_\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"doorbell_snapshot_\" \t    & $now(\"[Y0001]-[M01]-[D01]T[H01]_[m01]_[s01]Z\") \t    & \"_\"\t    & $split(msg.camera_entity_id, \".\")[1]\t    & \".jpg\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "is_critical",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "message",
                "pt": "msg",
                "to": "🔔 someone's at the door",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 280,
        "wires": [
            [
                "3296c10a.9b412e"
            ]
        ]
    },
    {
        "id": "bea87f39.bb9c18",
        "type": "debug",
        "z": "6c71644f.90490c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac4bc382.ee2b48",
        "type": "config",
        "z": "6c71644f.90490c",
        "name": "",
        "properties": [
            {
                "p": "s3",
                "pt": "flow",
                "to": "{     \"bucket\": \"blalor-imgs\",     \"prefix\": \"hass-notif-imgs/\" }",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "17801fb8.a006b8",
        "type": "debug",
        "z": "6c71644f.90490c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 200,
        "wires": []
    },
    {
        "id": "117ffffa.58b3a8",
        "type": "fan",
        "z": "6c71644f.90490c",
        "name": "",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "bea87f39.bb9c18",
                "f5de0832.ca3af"
            ]
        ]
    },
    {
        "id": "ae0edcc6.900b6",
        "type": "fan",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "5394059f.b5361c",
                "e3fd6b99.b748f8"
            ]
        ]
    },
    {
        "id": "4c2eab3e.8298d4",
        "type": "api-call-service",
        "z": "8e4e09de.5dedc8",
        "name": "in-hass notification",
        "server": "1fb2958d.14f89a",
        "version": 3,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "persistent_notification",
        "entityId": "",
        "data": "{\t    \"title\": \"low-flyer \" & payload.hex & \" \" & payload.flight,\t    \"message\": \"passing over \" & payload.lat & \",\" & payload.lon & \" moving \" & payload.gs & \" at \" & payload.alt_geom & \"' ASL, at \" & $fromMillis(timestamp * 1000)\t}",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4dccd86e.1676c8",
        "type": "trigger",
        "z": "8e4e09de.5dedc8",
        "name": "once/5m",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1540,
        "y": 100,
        "wires": [
            [
                "4c2eab3e.8298d4"
            ]
        ]
    },
    {
        "id": "431cbf62.65f4d",
        "type": "file",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "filename": "/tmp/filtered_flights.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c2b9da92.e5727",
        "type": "inject",
        "z": "8e4e09de.5dedc8",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1430,
        "y": 40,
        "wires": [
            [
                "4dccd86e.1676c8"
            ]
        ]
    },
    {
        "id": "b5ce440c.ce6f9",
        "type": "status",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "scope": [
            "4c2eab3e.8298d4"
        ],
        "x": 80,
        "y": 260,
        "wires": [
            [
                "cd60e5ac.2003a"
            ]
        ]
    },
    {
        "id": "cd60e5ac.2003a",
        "type": "debug",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c3be341.3c355c",
        "type": "file",
        "z": "6c71644f.90490c",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1200,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a1c6a8a6.870ca",
        "type": "change",
        "z": "6c71644f.90490c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/media/\" & msg.filename",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 280,
        "wires": [
            [
                "6c3be341.3c355c"
            ]
        ]
    },
    {
        "id": "18f6e019.e068d8",
        "type": "inject",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "timestamp",
                "v": "$toMillis($now())/1000\t",
                "vt": "jsonata"
            },
            {
                "p": "source",
                "v": "dump1090",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"hex\":\"a6a425\",\"flight\":\"NKS930  \",\"alt_baro\":1500,\"alt_geom\":1675,\"gs\":169.8,\"baro_rate\":-1280,\"category\":\"A3\",\"nav_qnh\":1019.2,\"nav_altitude_mcp\":1696,\"nav_heading\":87.2,\"lat\":37.57395400685966,\"lon\":-77.48991018535888,\"nic\":8,\"rc\":186,\"seen_pos\":11.3,\"version\":2,\"nic_baro\":1,\"nac_p\":10,\"nac_v\":4,\"sil\":3,\"sil_type\":\"perhour\",\"gva\":2,\"sda\":2,\"mlat\":[],\"tisb\":[],\"messages\":1034,\"seen\":4.2,\"rssi\":-12.4,\"name\":\"a6a425 NKS930  \",\"heading\":145.6,\"bearing\":145.6,\"icon\":\"plane\",\"layer\":\"ADSB\",\"alt\":510.54,\"label\":\"NKS930   510.54\",\"speed\":169.8}",
        "payloadType": "json",
        "x": 1130,
        "y": 100,
        "wires": [
            [
                "d8ba4108.07e18"
            ]
        ]
    },
    {
        "id": "d8ba4108.07e18",
        "type": "function",
        "z": "8e4e09de.5dedc8",
        "name": "geofence",
        "func": "var loc = {\n    latitude: msg.payload.lat,\n    longitude: msg.payload.lon,\n    elevation: msg.payload.alt_geom, // ft\n};\n\nvar fence = {\n    latitude: 37.57395400685966,\n    longitude: -77.48991018535888,\n    radius: 3400, // meters; ~distance to the river\n    ceiling: 2500, // feet, because I'm lazy\n};\n\nvar fence_msg = {\n    payload: {\n        name: \"GeoFence\",\n        layer: \"geofence\",\n        fillOpacity: 0.05,\n        fillColor: \"#404040\",\n        clickable: true,\n        //editable: true\n        lat: fence.latitude,\n        lon: fence.longitude,\n        radius: fence.radius,\n    },\n};\n\nif ( geolib.isPointWithinRadius(loc, fence, fence.radius) ) {\n    if (loc.elevation <= fence.ceiling) {\n        return [msg, fence_msg];\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            }
        ],
        "x": 1340,
        "y": 100,
        "wires": [
            [
                "4dccd86e.1676c8",
                "431cbf62.65f4d",
                "6d9a477f.c171c",
                "ed1ccafd.cbb06"
            ],
            [
                "a322656d.2b5a88"
            ]
        ]
    },
    {
        "id": "6d9a477f.c171c",
        "type": "debug",
        "z": "8e4e09de.5dedc8",
        "name": "inside fence",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 200,
        "wires": []
    },
    {
        "id": "ed1ccafd.cbb06",
        "type": "worldmap-tracks",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "depth": "100",
        "layer": "combined",
        "smooth": false,
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "a322656d.2b5a88"
            ]
        ]
    },
    {
        "id": "22785560.825c72",
        "type": "inject",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 40,
        "wires": [
            [
                "fcf1ed10.a77dc"
            ]
        ]
    },
    {
        "id": "fcf1ed10.a77dc",
        "type": "function",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "func": "async function processLineByLine() {\n  const fileStream = fs.createReadStream('/tmp/filtered_flights.json');\n\n  const rl = readline.createInterface({\n    input: fileStream,\n    crlfDelay: Infinity\n  });\n  // Note: we use the crlfDelay option to recognize all instances of CR LF\n  // ('\\r\\n') in input.txt as a single line break.\n\n  for await (const line of rl) {\n    node.send({ payload: JSON.parse(line) });\n  }\n}\n\nprocessLineByLine();\nnode.done();\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            },
            {
                "var": "readline",
                "module": "readline"
            }
        ],
        "x": 1250,
        "y": 40,
        "wires": [
            [
                "d8ba4108.07e18",
                "a322656d.2b5a88"
            ]
        ]
    },
    {
        "id": "bb59003c.d7ac68",
        "type": "geofence",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "mode": "circle",
        "inside": "true",
        "rad": 702.217078047325,
        "points": [],
        "centre": {
            "latitude": 37.57395400685966,
            "longitude": -77.48991018535888
        },
        "floor": "",
        "ceiling": "762",
        "worldmap": true,
        "outputs": 2,
        "x": 1390,
        "y": 500,
        "wires": [
            [
                "568f416.ab5534"
            ],
            [
                "a322656d.2b5a88"
            ]
        ]
    },
    {
        "id": "568f416.ab5534",
        "type": "file",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "filename": "/tmp/fenced_flights.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1630,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a79aa51e.72e288",
        "type": "worldmap in",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "path": "/worldmap",
        "events": "connect",
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "edc90c9c.19a7a"
            ]
        ]
    },
    {
        "id": "edc90c9c.19a7a",
        "type": "change",
        "z": "8e4e09de.5dedc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.action",
                "pt": "msg",
                "to": "send",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 540,
        "wires": [
            [
                "bb59003c.d7ac68"
            ]
        ]
    }
]